---

- name: Gather HANA database facts
  run_once: true
  block:

  - name: Create dictionary with installation variant for Hana Database
    set_fact:
      hdb_variants: "{{ item.variants }}"
    loop: "{{ components }}"
    when: item.component == 'hana_database'

  - name: Ensure the variant for LINUX is used
    set_fact:
      hdb_media_facts: "{{ item }}"
    loop: "{{ hdb_variants|flatten(levels=1) }}"
    when: item.os == 'LINUX'

- name: Check if a HANA database with the same SID has already been installed
  shell: "{{ hana_software_loc }}/{{ hdb_media_facts.media_loc }}/{{ hdb_media_facts.installer }} --list_systems | grep {{ hana_database.instance.sid }}"
  register: sid_existence_check_result
  failed_when: false

- name: Install HANA database with SID {{ hana_database.instance.sid }}
  when: sid_existence_check_result.rc != 0
  block:
  - name: Create install directories
    file:
      path: "{{ item }}"
      state: directory
    loop:
      - "{{ hana_install_path }}/SAP_HANA_DATABASE"

  - name: Create install template for SAP HANA 1.0
    template:
      src:  hdbserver_hana1.j2 
      dest: "{{ hana_install_path }}/hdbserver_{{ hana_database.instance.sid }}_install.cfg"
    when: hana_database.db_version is regex("1([0-9]\d|[0-9]\d{2})\.\d{2}")  

  - name: Create install template for SAP HANA 2.0
    template:
      src: hdbserver_hana2.j2 
      dest: "{{ hana_install_path }}/hdbserver_{{ hana_database.instance.sid }}_install.cfg"
    when: hana_database.db_version is regex("2.\d{2}\.0([0-9]\d|[0-9]\d{2,})") 

  - name: Create password file for hdblcm installer
    template:
      src: hdbserver_passwords.j2
      dest: "{{ hana_install_path }}/hdbserver_{{ hana_database.instance.sid }}_passwords.xml"

  - name: Install HANA Database using hdblcm
    shell: "pwd=$(<../hdbserver_{{ hana_database.instance.sid }}_passwords.xml); rm ../hdbserver_{{ hana_database.instance.sid }}_passwords.xml; echo $pwd | {{ hana_software_loc }}/{{ hdb_media_facts.media_loc }}/{{ hdb_media_facts.installer }} --sid={{ hana_database.instance.sid }} --batch --action=install --configfile='../hdbserver_{{ hana_database.instance.sid }}_install.cfg' --read_password_from_stdin=xml"
    args:
      chdir: "{{ hana_install_path }}/SAP_HANA_DATABASE"

  - name: Delete install template file
    file: 
      path: "{{ hana_install_path }}/hdbserver_{{ hana_database.instance.sid }}_install.cfg" 
      state: absent
